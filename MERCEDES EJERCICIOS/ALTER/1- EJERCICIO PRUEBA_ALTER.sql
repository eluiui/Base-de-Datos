
/***********************************************************************

            SENTENCIA     ALTER TABLE
                                      EN ESTE EJERCICIO 
                                      TODAS LAS OPERACIONES DE REDEFINICIÓN DE UNA TABLA 
                                      LAS ESTAMOS HACIENDO  CON TABLAS VACÍAS, SIN TUPLAS ALMACENADAS
                                      EN LAS TABLAS
                              *******************************************/


/**** EJECUTA UNA A UNA LAS SIGUIENTES SENTENCIAS*/


CREATE DATABASE IF NOT EXISTS PRUEBA_ALTER;
USE PRUEBA_ALTER;

CREATE TABLE IF NOT EXISTS ALUMNOS
(
  DNI CHAR(9) NOT NULL,
  NOMBRE VARCHAR(40) NOT NULL,
  PRIMARY KEY(DNI)

) ENGINE INNODB;


/***       EJERCICIO 1: 
 INCORPORAMOS LA  COLUMNA FECHA DE NACIMIENTO   OBLIGATORIA**/

ALTER TABLE ALUMNOS
   ADD COLUMN FECHA_NAC DATE NOT NULL FIRST;
   
   ALTER TABLE ALUMNOS
      DROP COLUMN FECHA_NAC;
      
ALTER TABLE ALUMNOS
   ADD COLUMN FECHA_NAC DATE NOT NULL AFTER DNI;
   ALTER TABLE ALUMNOS
      DROP COLUMN FECHA_NAC; 
      
   ALTER TABLE ALUMNOS
   ADD COLUMN FECHA_NAC DATE NOT NULL   AFTER DNI,
   ADD UNIQUE INDEX U_FECH (FECHA_NAC);   
      

/**          EJERCICIO 2: 
INCOPORAMOS EL DATO PESO DE ALUMNO , ES UN REAL EN SIPLE PRECISIÓN 
    ES OPTATIVO**/
    
    ALTER TABLE ALUMNOS
       ADD COLUMN PESO FLOAT NULL;

SELECT * FROM ALUMNOS;

   
/**** EJERCICIO 3: 
REDEFINIMOS LA COLUMNA NOMBRE DE ALUMNO, 
PASA A LLAMARSE NOMBRE_APE Y ES VARCHAR(50)*******/

ALTER TABLE ALUMNOS
 CHANGE COLUMN NOMBRE NOMBRE_APE VARCHAR(50) NOT NULL;
 
 /** EL DATO PESO QUEREMOS QUE SEA UN ENTERO**/
 ALTER TABLE ALUMNOS
   MODIFY PESO INT NOT NULL DEFAULT 50;



/**   EJERCICIO 4: 
 GARANTIZAR LA UNICIDAD DE EL DATO NOMBRE APELLIDOS DE  ALUMNO**/
/* TENGO QUE IMPONER RESTRICCIÓN DE UN ICIDAD A ESA COLUMNA 
    -----> CREAR UN ÍNDICE UNIQUE PARA ESA COLUMNA***/
    
  ALTER TABLE ALUMNOS
    ADD UNIQUE INDEX AK_NOMBRE_APE (NOMBRE_APE);
 /**O BIEN ESTA ORDEN**/   
 CREATE UNIQUE INDEX AK_NOMBRE_APE  ON ALUMNOS (NOMBRE_APE);    





/*** EJERCICIO 5: ELIMINAMOS LA COLUMNA PESO**/

ALTER TABLE ALUMNOS
 DROP COLUMN PESO;
     
     /*** EJERCICIO 6: 
     MODIFICAMOS CLAVE PRIMARIA DE LA TABLA, 
     PASA A SER UN ID_ALUMNO AUTO INCREMENTABLE**/
     
  ALTER TABLE ALUMNOS
     DROP PRIMARY KEY,
     ADD COLUMN ID_ALUMNO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT  FIRST,
     ADD PRIMARY KEY (ID_ALUMNO);
 /** PARA MANTENER LA RESTRICCIÓN DE UNICIDAD QUE TENÚIA DNI**/
 ALTER TABLE ALUMNOS
    ADD UNIQUE INDEX AK_DNI (DNI);
 /** O BIEN**/
 
 CREATE UNIQUE INDEX AK_DNI ON ALUMNOS (DNI);
    
/***    EJERCICIO 7:  
 ALMACENAR  LA ENTIDAD CURSO*******/

CREATE TABLE IF NOT EXISTS CURSOS
(
  ID_CURSO INT UNSIGNED   NOT NULL AUTO_INCREMENT,
  NOMBRE   VARCHAR(30) NULL,
  primary key (ID_CURSO),
 UNIQUE INDEX  NOMBRE_CURSO_UNICO (NOMBRE)
) engine innodb;


/***     EJERCICIO  8 : 
 INCORPORAR LA RELACIÓN   
  CADA CURSO TIENE QUE TENER ASIGNADO UN DELEGADO DE CURSO,
  QUE ES UN ALUMNO, A UN ALUMNO NO SE LE NOMBRE NUNCA DELEGADO
  DE MÁS DE UN CURSO AL MISMO  TIEMPO.
   NO PERMITIREMOS ELIMINAR A UN ALUMNO DE LA BASE DE DATOS MIENTRAS 
  CONSTE COMO DELEGADO DE UN CURSO
  **************************************************************/
 
/** SE TRATA DE UNA RELACIÓN (1:1) QUE VA  A SER REGISTRADA EN LA TABLA CURSOS**/
  ALTER TABLE CURSOS
     ADD COLUMN DELEGADO INT UNSIGNED NOT NULL,
     /** COMO LA TABLA ESTÁ VACÍA PUEDO DEFINIR LO SIGUIENTE**/
     ADD FOREIGN KEY(DELEGADO) REFERENCES ALUMNOS(ID_ALUMNO)
                 ON DELETE RESTRICT
                 ON UPDATE CASCADE,
     ADD UNIQUE INDEX FK_DELEGADO(DELEGADO);            

    

    
   /*** EJERCICIO 9:  
         QUEREMOS AÑADIR EN LA BASE DE DATOS EL DATO FECHA DESDE QUE UN ALUMNO ES NOMBRADO DELEGADO DE CURSO
         Y EL LIBRO DE CONSULTA QUE TIENEN LOS CURSOS, NO TODOS LOS CURSOS TIENEN LIBRO
         DE CONSULTA***/
         
    ALTER TABLE CURSOS
        ADD FECHA_DELEGADO DATE NOT NULL;
        
    ALTER TABLE CURSOS
      ADD LIBRO VARCHAR(50) NULL;
         
                
       /*** EJERCICIO 10:  
                COMO ACCEDEREMOS MUCHAS VECES AL DATO LIBRO  DE CONSULTA DE LOS CURSOS, 
                PARA AGILIZAR LAS CONSULTAS Y ACCESOS  A ESE DATO, 
                CREAR UN ÍNDICE,  PARA HACERLO MÁS LIGERO REALIZAR EL ÍNDICE CON LOS 15 PRIMEROS CARACTERES DEL DATO
                LIBRO    ***/ 
                
        ALTER TABLE CURSOS
           ADD INDEX BUSCA_LIBRO (LIBRO, (15));
           
      /** O BIEN **/
      
      CREATE INDEX BUSCA_LIBRO ON CURSOS (LIBRO, (15));
         
    
  /***   EJERCICIO 11: 
  MUESTRA LOS ÍNDICES CREADOS PARA LA TABLA CURSOS***/
  
  SHOW INDEX IN CURSOS; 
  
  
  
  
    
    
/***    EJERCICIO 12:  ALMACENAR ENTIDAD PROFESOR***/


CREATE TABLE IF NOT EXISTS PROFESORES
(
       DNI CHAR(9) NOT NULL PRIMARY KEY,
       NOMBRE VARCHAR(40) NOT NULL,
       FECHA_ALTA DATE NOT NULL

)ENGINE INNODB;
  
/***    EJERCICIO 13: 
   ALMACENAR PARA LOS PROFESORES,
 NSS COLUMNA OPTATIVA Y ÚNICA CADENA DE 12 CARACTERES DELANTE DE FECHA_ALTA,
FECHA DE NACIMIENTO DESPUES DE COLUMNA NOMBRE  OBLIGATORIA,
CAMBIAR LA FECHA DE ALTA POR AÑO DE ALTA,
 AÑADIR ESTADO CIVIL DESPUES DE NSS VALOR ENUMERADO OPTATIVO
                  ******/                     
ALTER TABLE PROFESORES
   ADD COLUMN NSS CHAR(12) NULL AFTER NOMBRE,
   ADD UNIQUE INDEX UNICO_NSS(NSS),
   ADD COLUMN FECHA_NAC DATE NOT NULL AFTER NOMBRE,
   ADD COLUMN ANHO YEAR NOT NULL,
   DROP COLUMN FECHA_ALTA,
   ADD COLUMN ESTAD_CIVIL ENUM('SOLTERO/A', 'CASADO/A', 'VIUDO/A', 'SEPARADO/A') NULL AFTER NSS;
   
  /** O BIEN PARA LAS ÚLTIMAS ÓRDENES*/ 
  
  ALTER TABLE PROFESORES
     CHANGE COLUMN FECHA_ALTA ANHO YEAR NOT NULL;
   
   
   
   
    

    
    

/***    EJERCICIO 14: 
  REGISTRAR LA RELACIÓN SER PROFESOR TUTOR DE CURSO:
  ALGUNOS CURSOS TIENEN NOMBRADO UN TUTOR,
  SE REGISTRA EL DÍA DE SEMANA DE LA TUTORÍA Y LA HORA
  UN PROFESOR  PUEDE SER TUTOR DE MÁS DE UN CURSO ***/
  
  
  /** SE TRATA DE UNA RELACIÓN (N:1) QUE TIENE QUE ALMACENARSE
  EN LA TABLA CURSOS DE FORMA OPTATIVA**/
  
  ALTER TABLE CURSOS
    ADD COLUMN TUTOR CHAR(9) NULL,
    ADD FOREIGN KEY(TUTOR) REFERENCES PROFESORES(DNI)
                      ON DELETE SET NULL
                      ON UPDATE CASCADE,
    ADD INDEX FK_TUTOR(TUTOR);                  
                      
    


/*** EJERCICIO 15:
          CREA UN ÍNDICE PARA AGILIZAR LAS OPERACIONES CON EL DATO NOMBRE PROFESOR**/
   



/***   EJERCICIO 16:  ELIMINA EL  ÍNDICE ANTERIOR**/
  



/****   LAS DOS MISMAS ÓRDENES CON OTRA SINTAXIS
        CON LAS SENTENCIAS    
                        CREATE Y DROP RESPECTIVAMENTE **********/



       

/**** EJERCICIO 17:         AHORA  CAMBIA LA RELACIÓN TUTOR DE CURSO:
                                          UN PROFESOR SÓLO PODRÁ SER TUTOR DE UN CURSO
                                          !!!!! ATENCIÓN                                **/

/** EL ÍNDICE FK_TUTOR_CURSO NO LO PUEDO BORRAR
     XQ ESTÁ ASOCIADO A LA RESTRICCIÓN DE FOREIGN KEY 
          ESTA ORDEN DA ERROR:
          
          DROP INDEX FK_TUTOR_CURSO ON CURSOS;
          
          Error Code: 1553. Cannot drop index 'FK_TUTOR_CURSO': needed in a foreign key constraint	0.000 sec

          ***/
 
 
 
 
                              /*** ATENCIÓN, EN EL MOMENTO EN QUE SE EJECUTA ESTA ORDEN CON DATOS EN LA TABLA CURSOS,
                                    LA INFORMACIÓN ALMACENADA EN LA COLUMNA TUTOR TIENE QUE SER SIN REPETICIONES,
                                    SINO LOS DATOS NO PERMITIRÁN LA CREACIÓN DEL ÍNDICE ÚNICO Y LA ORDEN DARÁ ERROR***/
 
 /************************ OBSERVA ESTE CÓDIGO...
                                  **/
 
 START TRANSACTION;

ALTER TABLE CURSOS
   DROP FOREIGN KEY CURSOS_IBFK_2;


DROP INDEX FK_TUTOR_CURSO ON CURSOS;

ALTER TABLE CURSOS
    ADD FOREIGN KEY (TUTOR) REFERENCES PROFESORES(DNI)
                            ON DELETE SET NULL
                            ON UPDATE CASCADE,
    ADD UNIQUE INDEX FK_TUTOR_CURSO (TUTOR);


COMMIT;



/*** todas estas operaciones 
en una transacción****/
 

/** ESTA ORDEN SI SE PUEDE DISEÑAR ASÍ**/


ALTER TABLE CURSOS
DROP INDEX FK_TUTOR_CURSO,
ADD UNIQUE INDEX FK_TUTOR_CURSO(TUTOR);







