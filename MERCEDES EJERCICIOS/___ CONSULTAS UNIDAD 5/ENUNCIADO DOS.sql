/*****
    cantidad de empleados que están supervisados,
    su salario medio y el salario más alto 
    de los supervisados
    **/
       SELECT  count(*) as cantidad_de_supervisados,
               avg(salario) as salario_medio_supervisados,
               max(salario) as mayor_salario_entre_los_supervisados
          FROM EMPLEADOS
          WHERE SUPERVISOR; /*where supervisor is not null*/
    
      
      
   /**** CUANTOS EMPLEADOS ESTÁN TRABAJANDO EN LOS
        PROYECTOS DE CLAVES 2,3 4, Y 5**/
        
        select  count(distinct empleado)
           from empleados_proyectos;
          
          
        /*** LISTA DE CLAVES PRIMARIAS DE LOS EMPLEADOS
             QUE SON DIRECTORES ***/
             
             
             select 
                    director as clave_director
                from departamentos;
             
              
      /*** prohibido, NO USO DISTINCT !!! 
          PORQUE COLUMNA DIRECTOR TIENE RESTRICCIÓN DE UNICIDAD
          si la relación tener director fuese (1:N)
          la columna director fk no tendría la restricción de unicidad
          su índice fk_director sería de tipo index
          ENTONCES LA CONSULTA SERÍA ASÍ:
          
             SELECT  DISTINCT DIRECTOR
                FROM DEPARTAMENTOS;
          **/
    
 
 /** LISTA DE CLAVES PRIMARIAS DE LOS EMPLEADOS
           QUE SON SUPERVISORES DE OTROS**/
  /** TENGO QUE ANALIZAR LA COLUMNA SUPERVISOR DE LA TABLA
      EMPLEADOS**/
      
    SELECT  DISTINCT SUPERVISOR AS CLAVES_SUPERVISORES
       FROM EMPLEADOS
       WHERE SUPERVISOR IS NOT NULL;
   
             
 /* EL INDICE FK_SUPERVISOR NO ES ÚNICO
   ---> SUPERVISOR PUEDE ESTAR REPETIDO 
   **/
   
   
   /*****   CLAÚSULA 
   GROUP BY COLUMNA**/
   
   
/**** PARA CADA DEPARTAMENTO DE LA EMPRESA
OBTENER CANTIDAD DE EMPLEADOS QUE TIENE
Y SU SALARIO MEDIO
***/

SELECT    DEPARTAMENTO AS CLAVE_DEPARTAMENTO,
          COUNT(*) AS CANTIDAD_EMPLEADOS_DEP,
          AVG(SALARIO) AS SALARIO_MEDIO_DEP
   FROM EMPLEADOS  /**SELECCIONA TODAS LAS TUPLAS, NO HAY CLÁUSULA WHERE*/
   GROUP BY DEPARTAMENTO;/*AGRUPARLAS POR VALOR DE COLUMNA DEPARTAMENTO*/
   
   /** ? CADA GRUPO ES EL CONJUNTO DE EMPLEADOS DE CADA DEPARTAMENTO
      ?TANTOS GRUPOS O TABLAS COMO VALORES DISTINTOS ENCUENTRE
      EN LA COLUMNA DEPARTAMENTO **/
   
   /**CADA GRUPO SON LOS EMPLEADOS
   DE UN DEPARTAMENTO
   **/

/** CLAVES DE LOS DISTINTOS DEPARTAMENTOS
     DE LA EMPRESA**/
  
  SELECT NUMERO
     FROM DEPARTAMENTOS;
  
  /** SUPONER QUE ERES UN USUARIO QUE NO TIENES ACCESO A LA TABLA DEPARTAMENTOS
     SI TENGO ACCESO A EMPLEADOS**/
  /*ESTA CONSULTA ES MUCHO MÁS COSTOSA QUE LA ANTERIOR**/   
     
     SELECT  DISTINCT DEPARTAMENTO
        FROM EMPLEADOS;
  
 
  /** NO USAR GROUP BY PARA ESTA CONSULTA
  ----> NO PIDEN NINGUN DATO DE GRUPO**/
  

   
   
   
      
/*** PARA CADA DEPARTAMENTO
  OBTENER LA CANTIDAD DE PROYECTOS
  QUE TIENE LANZADO, EL TOTAL DE SUS PRESUPUESTOS
  Y LA FECHA MÁS ANTIGUA DE PROYECTO
  **/
   SELECT    DEPARTAMENTO AS CLAVE_DEPARTAMENTO,
             COUNT(*) AS CANTIDAD_PROYECTOS_LANZADOS,
             SUM(PRESUPUESTO) AS TOTAL_PRESUPUESTOS_DEPARTAMENTO,
             MIN(FECHA_INICIO) AS FECHA_MAS_ANTIGUA_DEPARTAMENTO
     FROM PROYECTOS
     GROUP BY DEPARTAMENTO; /*CADA GRUPO SON LOS PROYECTOS DE UN DEPARTAMENTO*/
                            /* TANTOS GRUPOS COMO DEPARTAMENTOS TENGAN PROYECTOS*/ 
  
  
  SELECT COUNT(*)
     FROM PROYECTOS;   /*CANTIDAD DE PROYECTOS EN LA EMPRESA EN ESTE INSTANTE*/
  
  /**PARA CADA SUPERVISOR OBTENER
     CANTIDAD DE EMPLEADOS SUPERVISADOS
     SALARIO MEDIO DE SUS SUPERVISADOS
     **/
     
     SELECT    SUPERVISOR AS CLAVE_SUPERVISOR,
               COUNT(*) AS CANTIDAD_DE_SUPERVISADOS,
               AVG(SALARIO) AS SALARIO_MEDIO_SUPERVISADOS
         FROM EMPLEADOS
         GROUP BY SUPERVISOR; /* FORMO UN GRUPO DE EMPLEADOS POR CADA SUPERVISOR
                                  Y UN GRUPO DE NO SUPERVISADOS DE VALOR NULL*/
        
 /*SE FORMAN TANTOS GRUPOS COMO VALORES DISTINTOS
   HAY EN LA COLUMNA SUPERVISOR
   --- SE FORMARÍA 1 GRUPO PARA LOS NULL
   SI LO QUITO
   HAY TANTOS GRUPOS COMO SUPERVISORES **/
   
      SELECT   SUPERVISOR AS CLAVE_SUPERVISOR,
               COUNT(*) AS CANTIDAD_DE_SUPERVISADOS,
               AVG(SALARIO) AS SALARIO_MEDIO_SUPERVISADOS
         FROM EMPLEADOS
         WHERE SUPERVISOR IS NOT NULL
         GROUP BY SUPERVISOR; /**TANTOS GRUPOS COMO SUPERVISORES HAY
                               CADA GRUPO SON LOS EMPLEADOS SUPERVISADOS POR
                                EL MISMO SUPERVISOR*/
     
     
    /*LISTA DE NOMBRES DE LOS SUPERVISADOS**/ 
    SELECT  NOMBRE
       FROM EMPLEADOS
       WHERE SUPERVISOR IS NOT NULL; /* WHERE SUPERVISOR*/
       
     /*LISTA DE NOMBRES DE LOS NO  SUPERVISADOS**/    
     SELECT  NOMBRE
       FROM EMPLEADOS
       WHERE SUPERVISOR IS NULL;
     
     /** LISTA DE NOMBRES DE LOS DIRECTORES**/
     
     SELECT  NOMBRE
        FROM EMPLEADOS
        WHERE ID_EMPLEADO IN (
                                 SELECT   DIRECTOR
                                      FROM DEPARTAMENTOS 
                             );
                             
                            
     
  /**** OBTENER PARA CADA DEPARTAMENTO
    CANTIDAD DE EMPLEADOS SUPERVISADOS  QUE TIENE
    Y SALARIO MEDIO DE LOS SUPERVISADOS DEL DEPARTAMENTO
    **/
 /*ESTA NO ES LA SOLUCIÓN*/   
  SELECT COUNT(*) AS CANTIDAD_SUPERVISADOS_EMPRESA,
         AVG(SALARIO) AS SALARIO_MEDIO_SUPERVISADOS_EMPRESA
     FROM EMPLEADOS
     WHERE SUPERVISOR IS NOT NULL;
     
     
 /*NECESITO AGRUPAR LAS TUPLAS DE EMPLEADO SUPERVISADO POR DEPARTAMENTO*/    
    
    SELECT  DEPARTAMENTO AS CLAVE_DEPARTAMENTO, 
            COUNT(*) AS CANTIDAD_SUPERVISADOS_DEL_DEPARTAMENTO,
            AVG(SALARIO) AS SALARIO_MEDIO_SUPERVISADOS_DEL_DEPARTAMENTO
      FROM EMPLEADOS
      WHERE SUPERVISOR IS NOT NULL
      GROUP BY DEPARTAMENTO;/*CADA GRUPO SON LOS SUPERVISADOS DE CADA DEPARTAMENTO*/
                            /* TANTOS GRUPOS COMO DEPARTAMNETOS ENCUENTRE*/
/****** POR CADA DEPARTAMENTO OBTENER:
      CANTIDAD DE EMPLEADOS,
      CANTIDAD DE EMPLEADOS SUPERVISADOS,
      CANTIDAD DE EMPLEAODS SIN SUPERVISAR,
      SALARIO MEDIO DEL DEPARTAMENTO 
  **/
  
  SELECT    DEPARTAMENTO AS CLAVE_DEPARTAMENTO,
            COUNT(*) AS CANTIDAD_EMPLEADOS,
            COUNT(SUPERVISOR) AS CANTIDAD_DE_SUPERVISADOS,
            COUNT(*) - COUNT(SUPERVISOR) AS CANTIDAD_NO_SUPERVISADOS,
            AVG(SALARIO) AS SALARIO_MEDIO_DEPARTAMENTO
     FROM EMPLEADOS  /*ME QUEDO CON TODOS LOS EMPLEADOS, NO USO WHERE*/
     GROUP BY DEPARTAMENTO;
     
 SELECT    DEPARTAMENTO AS CLAVE_DEPARTAMENTO,
            COUNT(*) AS CANTIDAD_EMPLEADOS,
            COUNT(SUPERVISOR) AS CANTIDAD_DE_SUPERVISADOS,
            COUNT(*) - COUNT(SUPERVISOR) AS CANTIDAD_NO_SUPERVISADOS,
            AVG(SALARIO) AS SALARIO_MEDIO_DEPARTAMENTO
     FROM EMPLEADOS  /*ME QUEDO CON TODOS LOS EMPLEADOS, NO USO WHERE*/
     GROUP BY DEPARTAMENTO
     ORDER BY CANTIDAD_EMPLEADOS DESC, CANTIDAD_DE_SUPERVISADOS DESC;
 
 
       
/*****  PARA LOS DEPARTAMENTOS
        QUE TENGAN MÁS DE 2 EMPLEADOS , OBTENER:
        SALARIO MEDIO DEL DEPARTAMENTO, CANTIDAD DE SUPERVISADOS
        Y MAYOR SALARIO
   ***/
   
   
   
   
  
   
 /*** CADA GRUPO SON LOS EMPLEADOS DE CADA DEPARTAMENTO**/  
   
   
   
   
  /** OBTENER PARA CADA PROYECTO:
      SU CLAVE DE PROYECTO,
      LA CANTIDAD DE EMPLEADOS TRABAJANDO EN ÉL, 
      TOTAL HORAS DE TRABAJO 
      **/
      
      SELECT  PROYECTO AS CLAVE_PROYECTO,
              COUNT(*) AS CANTIDAD_DE_EMPLEADOS_TRABAJANDO,
              SUM(NUM_HORAS) AS TOTAL_HORAS_TRABAJANDO
         FROM EMPLEADOS_PROYECTOS
         GROUP BY PROYECTO; /*CADA GRUPO SON LOS EMPLEADOS TRABAJANDO EN CADA PROYECTO*/
      
       
     /*** CADA GRUPO SON LOS REGISTROS DE TRABAJO DE CADA PROYECTO***/
     /*** HABRÁ TANTOS GRUPOS COMO PROYECTOS TRABAJANDO...*/
     /**** TAMAÑO DE TABLA PROYECTOS NO TIENE PORQUE SER = NÚMERO DE GRUPOS**/
     
  /*** OBTENER PARA CADA EMPLEADO SU CLAVE, LA CANTIDAD DE PROYECTOS
       EN LOS QUE ESTÁ TRABAJANDO Y EL NÚMERO TOTAL DE HORAS
       QUE TRABAJA EN LOS DISTINTOS PROYECTOS*/
       
       
       
       SELECT
                EMPLEADO AS CLAVE_EMPLEADO,
                COUNT(*) AS CANTIDAD_DE_PROYECTOS_TRABAJA,
                SUM(NUM_HORAS) AS TOTAL_HORAS_TRABAJA
          FROM EMPLEADOS_PROYECTOS
          GROUP BY EMPLEADO;/*CADA GRUPO ES EL TRABAJO DE UN EMPLEADO*/
  
  /** CUÁNTOS EMPLEADOS HAY EN LA EMPRESA*/
  SELECT COUNT(*) FROM EMPLEADOS;
  /*CUÁNTOS EMPLEADOS ESTÁN TRABAJANDO EN ALGÚN PROYECTO*/
  SELECT   COUNT(DISTINCT EMPLEADO) AS CANTIDAD_EMPLEADOS_TRABAJAN
      FROM EMPLEADOS_PROYECTOS;
  /** OBTENER LA CLAVE DE EMPLEADO
      Y TOTAL HORAS DE TRABAJO EN LOS DITINTOS PROYECTOS
      DE AQUELLOS EMPLEADOS QUE TRABAJEN MÁS DE 50 HORAS EN LOS 
      DISTINTOS PROYECTOS*/
      
      /* CADA TUPLA EMPLEADO_PROYECTO NO TIENE EL DATO TOTAL HORAS
        DE TRABAJO---> ES UN DATO DE AGRUPAMIENTO
        --> CONDICIÓN DE GRUPO NO CONDICIÓN DE TUPLA*/
        
        
  SELECT   
           EMPLEADO AS CLAVE_EMPLEADO,
           SUM(NUM_HORAS) AS TOTAL_HORAS_TRABAJO
    FROM EMPLEADOS_PROYECTOS
    GROUP BY EMPLEADO
    HAVING SUM(NUM_HORAS) >50; /* ESTO ES UNA CONDICIÓN DE GRUPO
                                 SELECCIONO GRUPOS*/
  /* OBTENER PARA CADA PROYECTO,
      CLAVE PROYECTO, CANTIDAD DE EMPLEADOS TRABAJANDO,
      PRIMER DÍA DE TRABAJO DE ALGÚN EMPLEADO,
      Y TOTAL HORAS DE TRABAJO,
      EN EL INFORME NO SE INCLUYE EL TRABAJO DE LOS EMPLEADOS 
      DE CLAVES 2,3 Y 4
      **/
  
  SELECT
             PROYECTO AS CLAVE_PROYECTO,
             COUNT(*) AS CANTIDAD_EMPLEADOS_TRABAJANDO,/*SIN 2,3,4*/
             MIN(FECHA_INICIO) AS PRIMER_DIA_DE_TRABAJO,
             SUM(NUM_HORAS) AS TOTAL_HORAS_TRABAJO/**SIN 2,3,4*/
             
     FROM EMPLEADOS_PROYECTOS
     WHERE EMPLEADO NOT IN (2,3,4) /*YA NO ESTÁN LOS REGISTROS DE TRABAJO DE ESTOS EMPLEADOS*/
                          /*CONDICIÓN DE TUPLA POR ESO USO WHERE*/
     GROUP BY PROYECTO;                     
  
   /** PARA LOS PROYECTOS QUE HAYAN COMENZADO SU TRABAJO
       HACE MÁS DE 30 DIAS, OBTENER:       
       SU CLAVE, CANTIDAD DE EMPLEADOS QUE ESTÁN TRABAJANDO EN ÉL
       **/
       
    SELECT  PROYECTO AS CLAVE_PROYECTO,
            COUNT(*) AS CANTIDAD_EMPLEADOS_TRABAJANDO 
       FROM EMPLEADOS_PROYECTOS
       GROUP BY PROYECTO
       HAVING DATEDIFF(CURRENT_DATE(), MIN(FECHA_INICIO))>30;
  
/*******************************************************************/      
      
 /**OBTENER  LAS CLAVES DE LOS EMPLEADOS QUE ESTÁN
    TRABAJANDO EN MÁS DE 3 PROYECTOS DISTINTOS
  **/
       
       SELECT   EMPLEADO AS CLAVE_EMPLEADO
          FROM EMPLEADOS_PROYECTOS
          GROUP BY EMPLEADO /*CADA GRUPO ES EL TRABAJO DE UN EMPLEADO*/ 
          HAVING COUNT(*) >3; /*SELECCIONO A LOS EMPLEADOS QUE TRABAJAN EN MÁS DE PROYECTOS*/
     
     SELECT   EMPLEADO AS CLAVE_EMPLEADO,
              COUNT(*) AS CANTIDAD_PROYECTOS_TRABAJA
          FROM EMPLEADOS_PROYECTOS
          GROUP BY EMPLEADO /*CADA GRUPO ES EL TRABAJO DE UN EMPLEADO*/ 
          HAVING COUNT(*) >3; /*SELECCIONO A LOS EMPLEADOS QUE TRABAJAN EN MÁS DE PROYECTOS*/
     
     
   /***  OBTÉN CLAVES DE  EMPLEADOS**/
   
     SELECT  ID_EMPLEADO
        FROM EMPLEADOS;
    
   
   /***  OBTENER CLAVES DE EMPLEADOS QUE TRABAJAN EN ALGÚN PROYECTO**/
     SELECT   DISTINCT EMPLEADO
        FROM EMPLEADOS_PROYECTOS;
   
              /****NO HACE FALTA PARA ESTA CONSULTA USAR GROUP BY,
                   PORQUE NO HAN PEDIDO NINGÚN DATO DE AGRUPAMIENTO**/
   
  /********************************************************/ 

/**** PARA LOS EMPLEADOS QUE ESTÉN TRABAJANDO
EN MÁS DE 3 PROYECTOS, SU CLAVE ,CANTIDAD DE PROYECTOS
   Y TOTAL HORAS DE TRABAJO QUE REALIZAN**/  
    SELECT   EMPLEADO AS CLAVE_EMPLEADO,
             COUNT(*) AS CANTIDAD_PROYECTOS_TRABAJA,
             SUM(NUM_HORAS) AS TOTAL_HORAS_TRABAJO 
          FROM EMPLEADOS_PROYECTOS
          GROUP BY EMPLEADO /*CADA GRUPO ES EL TRABAJO DE UN EMPLEADO*/ 
          HAVING COUNT(*) >3; /*SELECCIONO A LOS EMPLEADO CON MÁS DE TRES TUPLAS->
                               TRABAJAN EN MÁS DE TRES PROYECTOS*/

   
/**** PARA LOS EMPLEADOS QUE ESTÉN TRABAJANDO
EN MÁS DE 3 PROYECTOS,  y hayan comenzado a trabajar
  en algún proyecto antes del día 12 de enero del 2017,
  SU CLAVE ,CANTIDAD DE PROYECTOS
   Y TOTAL HORAS DE TRABAJO QUE REALIZAN**/  
/* TRABAJAR EN X PROYECTOS ES UN DATO DE GRUPO
   Y COMENZAR EN CUALQUIER ANTES UNA FECHA */
   
   SELECT   EMPLEADO AS CLAVE_EMPLEADO,
            COUNT(*) AS CANTIDAD_PROYECTOS,
            SUM(NUM_HORAS) AS TOTAL_HORAS
      FROM EMPLEADOS_PROYECTOS
      GROUP BY EMPLEADO
      HAVING COUNT(*)>3
             AND
             MIN(FECHA_INICIO) < '2017-01-12';
   
   
   
/***OBTENER PARA LOS EMPLEADOS :
   
   SU CLAVE, CANTIDAD DE PROYECTOS EN LOS QUE TRABAJAN
   Y TOTAL HORAS DE TRABAJO EN LOS DISTINTOS PROYECTOS
   
   EN EL INFORME SÓLO SE TIENE EN CUENTA LOS REGISTROS DE TRABAJO
    QUE HAYAN COMENZADO DESPUES DE 2017-08-20----->
    ATENCIÓN ESTO ES UNA CONDICIÓN DE TUPLA
    NO DE GRUPO
  */
   
   SELECT   
          EMPLEADO AS CLAVE_EMPLEADO,
          COUNT(*) AS CANTIDAD_PROYECTOS_TRABAJAN_POSTERIORES_A_ESA_FECHA,
          SUM(NUM_HORAS) AS TOTAL_HORAS
      FROM EMPLEADOS_PROYECTOS
      WHERE FECHA_INICIO>'2017-08-20'
      GROUP BY EMPLEADO;
      
   
   
   
/*** PARA CADA SUPERVISOR
     CANTIDAD DE EMPLEADOS SUPERVISADOS**/
   /*ESTA ES LA SOLUCIÓN*/ 
    SELECT   SUPERVISOR AS CLAVE_SUPERVISOR,
             COUNT(*) AS CANTIDAD_EMPLEADOS_SUPERVISADOS
        FROM EMPLEADOS
        WHERE SUPERVISOR IS NOT NULL /*SELECCIONO EMPLEADOS(TUPLAS), LOS QUE ESTÁN SUPERVISADOS*/
        GROUP BY SUPERVISOR; /* SE FORMAN TANTOS GRUPOS COMO SUPERVISORES HAY EN LOS DATOS
                              * CADA GRUPO ES UN SUPERVISOR (SON LOS EMPLEADOS DE UN SUPERVISOR)*/
     
   /***** ATENCIÓN , FIJARSE EN COMO SE DISEÑA**/  
   /** USO DE WHERE HAGO MUY EFICIENTE LA CONSULTA, ELIMINO MUCHAS TUPLAS QUE NO
       HACEN FALTA, ANTES DE EJECUTARSE CLÁUSULA GROUP BY**/
  
  SELECT  COUNT(*) AS CANTIDAD_SUPERVISADOS
     FROM EMPLEADOS
     WHERE SUPERVISOR;
 /* SIN WHERE NO ES VÁLIDA, HABRÁ UN GRUPO DE NO SUPERVISADOS*/    
   SELECT   SUPERVISOR AS CLAVE_SUPERVISOR,
             COUNT(*) AS CANTIDAD_EMPLEADOS_SUPERVISADOS
        FROM EMPLEADOS
        GROUP BY SUPERVISOR;   
     
     
  /**AÑADE A ESTE INFORME, 
  EL SALARIO MEDIO DE LOS SUPERVISADOS POR  CADA SUPERVISOR**/
     /*ESTA ES LA SOLUCIÓN*/ 
    SELECT   SUPERVISOR AS CLAVE_SUPERVISOR,
             COUNT(*) AS CANTIDAD_EMPLEADOS_SUPERVISADOS,
             AVG(SALARIO) AS SALARIO_MEDIO_SUPERVISADOS
        FROM EMPLEADOS
        WHERE SUPERVISOR IS NOT NULL /*SELECCIONO EMPLEADOS(TUPLAS), LOS QUE ESTÁN SUPERVISADOS*/
        GROUP BY SUPERVISOR /* SE FORMAN TANTOS GRUPOS COMO SUPERVISORES HAY EN LOS DATOS
                              * CADA GRUPO ES UN SUPERVISOR (SON LOS EMPLEADOS DE UN SUPERVISOR)*/
        ORDER BY COUNT(*) DESC;  
        
 /* O TAMBIÉN*/
 SELECT   SUPERVISOR AS CLAVE_SUPERVISOR,
             COUNT(*) AS CANTIDAD_EMPLEADOS_SUPERVISADOS,
             AVG(SALARIO) AS SALARIO_MEDIO_SUPERVISADOS
        FROM EMPLEADOS
        WHERE SUPERVISOR IS NOT NULL /*SELECCIONO EMPLEADOS(TUPLAS), LOS QUE ESTÁN SUPERVISADOS*/
        GROUP BY SUPERVISOR /* SE FORMAN TANTOS GRUPOS COMO SUPERVISORES HAY EN LOS DATOS
                              * CADA GRUPO ES UN SUPERVISOR (SON LOS EMPLEADOS DE UN SUPERVISOR)*/
        ORDER BY CANTIDAD_EMPLEADOS_SUPERVISADOS DESC;    
 
  /***AÑADE AL INFORME ANTERIOR
      CANTIDAD DE DEPARTAMENTOS A LOS QUE 
      PERTENECEN LOS SUPERVISADOS DE CADA SUPERVISOR
  ENUNCIADO ES ENTONCES,
    /*** OBTENER  PARA CADA SUPERVISOR
      LA  CANTIDAD DE EMPLEADOS SUPERVISADOS, EL SALARIO MEDIO DE SUS SUPERVISADOS
      Y LA CANTIDAD DE DEPARTAMENTOS A LOS QUE PERTENECEN SUS SUPERVISADOS
      **/
    
  SELECT     SUPERVISOR AS CLAVE_SUPERVISOR,
             COUNT(*) AS CANTIDAD_EMPLEADOS_SUPERVISADOS,
             AVG(SALARIO) AS SALARIO_MEDIO_SUPERVISADOS,
             COUNT(DISTINCT DEPARTAMENTO) AS CANTIDAD_DEPARTAMENTOS
        FROM EMPLEADOS
        WHERE SUPERVISOR IS NOT NULL /*SELECCIONO EMPLEADOS(TUPLAS), LOS QUE ESTÁN SUPERVISADOS*/
        GROUP BY SUPERVISOR /* SE FORMAN TANTOS GRUPOS COMO SUPERVISORES HAY EN LOS DATOS
                              * CADA GRUPO ES UN SUPERVISOR (SON LOS EMPLEADOS DE UN SUPERVISOR)*/
        ORDER BY CANTIDAD_EMPLEADOS_SUPERVISADOS DESC; 
        
  /*** PARA LOS  SUPERVISORES CON MÁS DE 3 SUPERVISADOS,
       OBTENER SU CLAVE Y CANTIDAD DE EMPLEADOS SUPERVISADOS**/  
    
     SELECT   SUPERVISOR AS CLAVE_SUPERVISOR,
              COUNT(*) AS CANTIDAD_SUPERVISADOS
        FROM EMPLEADOS
        WHERE SUPERVISOR
        GROUP BY SUPERVISOR
        HAVING COUNT(*)>3;
        
        /** ESTÁ PEOR --(MAL) NO ES EFICIENTE*/
        
      SELECT   SUPERVISOR AS CLAVE_SUPERVISOR,
               COUNT(SUPERVISOR) AS CANTIDAD_SUPERVISADOS
        FROM EMPLEADOS
        WHERE SUPERVISOR
        GROUP BY SUPERVISOR
        HAVING COUNT(SUPERVISOR)>3;  
  
  /*** DIME: CUÁNTOS SUPERVISORES HAY ???**/
  
    SELECT  COUNT(DISTINCT SUPERVISOR) AS CANTIDAD_DE_SUPERVISORES
       FROM EMPLEADOS
       WHERE SUPERVISOR;
     
   /***  OBTENER: CLAVES DE  LOS SUPERVISORES?**/  
     
    SELECT  DISTINCT SUPERVISOR
       FROM EMPLEADOS
       WHERE SUPERVISOR;
     
     /* DIME CANTIDAD DE SUPERVISADOS*/
     
     SELECT  COUNT(*) AS  CANTIDAD_SUPERVISADOS
       FROM EMPLEADOS
       WHERE SUPERVISOR;
       
    /* ES LO MISMO , O TAMBIÉN ASÍ*/
    
    SELECT  COUNT(SUPERVISOR) AS CANTIDAD_SUPERVISADOS
      FROM EMPLEADOS;
      
   /*** OBTENER INFORME DE:
        CLAVE DE CADA SUPERVISOR, MAYOR SALARIO DE SUS
        SUPEVISADOS, CANTIDAD DE SUPERVISADOS.
        EN EL INFORME  NO SE TIENE EN CUENTA A LOS SUPERVISADOS QUE PERTENEZCAN AL DEPARTAMENTO
        DE CLAVE 3**/
       
      SELECT   SUPERVISOR AS CLAVE_SUPERVISOR,
               COUNT(*) AS CANTIDAD_SUPERVISADOS,
               MAX(SALARIO) AS MAYOR_SALARIO_DE_SUS_SUPERVISADOS
         FROM EMPLEADOS
         WHERE SUPERVISOR IS NOT NULL
                AND
               DEPARTAMENTO<>3 /*DEPARTAMENTO!=3*/
        GROUP BY SUPERVISOR;  
         
        
       /**** DISTINGUIR, CONCEPTUALIZAR 
            CONDICIÓN DE GRUPO ?? / CONDICIÓN DE TUPLA??
            AQUÍ NECESITAMOS VERIFICAR DOS CONDICIONES DE TUPLA CON WHERE***/
                
                
        /** DIME CUÁNTOS SUPERVISADOS HAY EN EL DEPARTAMENTO DE CLAVE 3?   */
        
        SELECT   COUNT(*) AS CANTIDAD_SUPERVISADOS_EN_DEP_3
          FROM EMPLEADOS
          WHERE SUPERVISOR AND DEPARTAMENTO=3;
        
        
      /**** OBTENER PARA CADA PROYECTO,UN INFORME CON:            
        CLAVE DEL PROYECTO,
        CANTIDAD DE EMPLEADOS TRABAJANDO,
        EL TOTAL HORAS DE TRABAJO QUE SE REALIZAN EN CADA PROYECTO,
        LA FECHA MÁS ANTIGÜA DE COMIENZO DE TRABAJO, 
        CUÁNTOS DÍA LLEVAMOS TRABAJANDO EN CADA PROYECTO,
        EL INFORME LO QUEREMOS ORDENADO POR CANTIDAD DE EMPLEADOS
        TRABAJANDO EN ORDEN DESCENDENTE, DE MAYOR A MENOR CANTIDAD DE EMPLEADOS TRABAJANDO
        ***/
        
      SELECT     PROYECTO AS CLAVE_PROYECTO,
                 COUNT(*) AS CANTIDAD_EMPLEADOS_TRABAJANDO,
                 SUM(NUM_HORAS) AS TOTAL_HORAS_TRABAJO_EN_PROYECTO,
                 MIN(FECHA_INICIO) AS PRIMER_DIA_DE_TRABAJO_EN_PROYECTO,
                 DATEDIFF(CURRENT_DATE(), MIN(FECHA_INICIO)) AS CANTIDAD_DIAS_TRABAJANDO
               
        FROM EMPLEADOS_PROYECTOS 
        GROUP BY PROYECTO /*CADA GRUPO ES EL TRABAJO EN UN PROYECTO*/
        ORDER BY COUNT(*) DESC;
        
    /*EN ESTE INFORME ESTÁN TODOS LOS PROYECTOS QUE TIENEN ALGÚN EMPLEADO
       TRABAJANDO 
       HEMOS UTILIZADO TODOS LOS REGISTROS DE TRABAJO (NO HAY WHERE)
       HEMOS UTILIZADO TODOS LOS PROYECTOS (NO HAY HAVING)*/    
        
          
     /*** MODIFICAR EL INFORME ANTERIOR, SÓLO PARA LOS PROYECTOS
          CON MÁS DE 3 EMPLEADOS
          TRABAJANDO**/
     /* EN ESTA CONSULTA UN PROYECTO NO ES UNA TUPLA, ES UN GRUPO
        ENTONCES SELECCIONAR PROYECTOS ES UN HAVING*/
        
       SELECT     PROYECTO AS CLAVE_PROYECTO,
                 COUNT(*) AS CANTIDAD_EMPLEADOS_TRABAJANDO,
                 SUM(NUM_HORAS) AS TOTAL_HORAS_TRABAJO_EN_PROYECTO,
                 MIN(FECHA_INICIO) AS PRIMER_DIA_DE_TRABAJO_EN_PROYECTO,
                 DATEDIFF(CURRENT_DATE(), MIN(FECHA_INICIO)) AS CANTIDAD_DIAS_TRABAJANDO
               
        FROM EMPLEADOS_PROYECTOS 
        GROUP BY PROYECTO /*CADA GRUPO ES EL TRABAJO EN UN PROYECTO*/
        HAVING COUNT(*)>3
        ORDER BY COUNT(*) DESC;   
          
 /*** OBTENER UN INFORME PARA CADA DEPARTAMENTO
      CANTIDAD DE PROYECTOS LANZADOS, Y TOTAL PRESUPUESTO
      INVERTIDO EN LOS DITINTOS PROYECTOS.
      ***/
        
        
        SELECT   DEPARTAMENTO AS CLAVE_DEPARTAMENTO,
                 COUNT(*) AS CANTIDAD_PROYECTOS_LANZADOS,
                 SUM(PRESUPUESTO) AS TOTAL_INVERSIÓN_EN_PROYECTOS
           FROM PROYECTOS
           GROUP BY DEPARTAMENTO; /*CADA GRUPO SON LOS PROYECTOS DE UN DEPARTAMENTO*/
                                  /*TANTOS GRUPOS COMO DEPARTAMENTOS TENGAN PROYECTOS*/
   
   
   
   /* OBTENER PARA CADA DEPARTAMENTO, SU CLAVE Y LA CANTIDAD DE PROYECTOS
      QUE TIENEN PREVISTO FINALIZAR DENTRO DE 100 DIAS*/  
      
      SELECT    DEPARTAMENTO AS CLAVE_DEPARTAMENTO,
                COUNT(*) AS CANTIDAD_PROYECTOS 
        FROM PROYECTOS
        WHERE DATEDIFF(CURRENT_DATE(), FECHA_PREV_FIN) >=100
        GROUP BY DEPARTAMENTO;
        
      
      
      
      
      
   