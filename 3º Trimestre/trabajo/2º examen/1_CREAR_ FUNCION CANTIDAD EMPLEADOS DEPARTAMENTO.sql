/* VAMOS A CREAR UNA FUNCIÓN PARA NUESTRA BASE DE DATOS EMPRESA_PRACTICAS:
    LA FUNCIÓN RECIBE LA CLAVE PRIMARIA DE UN DEPARTAMENTO Y NOS DEVUELVE LA CANTIDAD DE EMPLEADOS
    ASIGNADOS EN ESTE INSTANTE A ESE DEPARTAMENTO*/


/* SIEMPRE,  LO PRIMERO DISEÑAMOS LA CABECERA:
    LA FUNCIÓN "HABLA ASÍ: SI ME DAS LO QUE NECESITO SABER: LA CLAVE DEL DEPARTAMENTO,
    YO ACCEDO A LA BASE DE DATOS Y LA CONSULTO, CUENTO LA CANTIDAD DE EMPLEADOS ASIGNADOS 
    AL DEPARTAMENTO QUE ME HAS DICHO Y ESE NUEVO DATO TE LO ENVÍO DE VUELTA"
    POR TANTO, NECESITAMOS DEFINIR UN PARÁMETRO EN LA CABECERA DE ESTA  FUNCIÓN
    QUE SERÁ EL ESPACIO DE MEMORIA INTERNA EN DONDE SE RECIBA EL ARGUMENTO(DATO QUE VIAJA POR EL BUS DE DATOS)
    CUANDO HAGAMOS USO DE LA FUNCIÓN,
    ES DECIR, CUANDO LA LLAMEMOS O EJECUTEMOS, 
    ESTE ESPACIO ESTÁ PENSADO PARA RECIBIR LA CLAVE DE UN  DEPARTAMENTO, 
    PUES ...
    !!VETE A VER DE QUÉ TIPO DE DATO ES LA CLAVE DE DEPARTAMENTO EN LA BASE DE DATOS!! PARA DECLARAR EL PARÁMETRO
    POR OTRO LADO, LA CANTIDAD DE EMPLEADOS ES UN DATO DE TIPO ENTERO,POR TANTO, 
     LA FUNCIÓN RETORNA UN VALOR O DATO DE TIPO ENTERO */


/***********************  YA TENEMOS LA CABECERA:
Se llamará Num_empleados_dep, tiene un solo parámetro al que identifico como clave_departamento
 y es de tipo int unsigned,la función retorna un dato de tipo entero.
La parte READS SQL DATA es opcional, documento la función para el compilador diciendo que esta rutina sólo hará
operaciones de lectura sobre la base de datos

CREATE FUNCTION Num_empleados_dep (clave_departamento int unsigned)
RETURNS INT
READS SQL DATA
********************************************************************************/

/* LO SEGUNDO, DISEÑAMOS  EL CUERPO DE LA FUNCIÓN: ES DECIR "CONTAMOS AQUÍ, EN ESTE BLOQUE DE SENTENCIAS
BEGIN.... END " LA TAREA QUE LA FUNCIÓN REALIZA. 
   COMO VA A RETORNAR UN ENTERO, DECIMOS: "VAMOS A DECLARAR UNA VARIABLE DE TIPO ENTERO PARA RETORNAR
   SU VALOR CUANDO CONSIGAMOS QUE TENGA  ALMACENADO EL VALOR QUE BUSCAMOS".
   AHORA NECESITO USAR UNA VERSIÓN NUEVA  DE  LA SENTENCIA SELECT

       SELECT   COLUMNA INTO VARIABLE [COLUMNA2 INTO VARIABLE2, ..]
          FROM   TABLA;

ESTA SENTENCIA SELECT, EN LA QUE USAMOS LA OPCIÓN COLUMNA_DE_SELECCIÓN INTO VARIABLE
       TIENE QUE CONSTRUIR UNA TABLA DE UNA SOLA TUPLA !!!
  PIÉNSALO, COLUMNA SOLO PUEDE SER UN DATO, NO UNA LISTA DE DATOS (SELECT QUE DEVUELVE VARIAS TUPLAS)
            PORQUE SOLO TIENES UNA VARIABLE
**/   
/** ¿QUÉ TIENE QUE HACER LA FUNCIÓN, CUÁL ES SU TAREA O PROCESO?
    ACCEDER A LA TABLA EMPLEADOS, SELECCIONAR TODAS LAS TUPLAS DE ESA TABLA QUE CUMPLAN LA CONDICIÓN
    DE QUE SU COLUMNA DEPARTAMENTO SEA IGUAL A?   !!! VALOR QUE TENGO ALMACENADO EN PARÁMENTRO DE ENTRADA,
    DONDE ME HAN DEJADO UN DATO:
    LA CLAVE DEL DEPARTAMENTO QUE  BUSCO!!, LAS CUENTO CON FUNCIÓN DE AGREGADO Y ESE VALOR LO ALMACENO EN MI VARIABLE 
    CANTIDAD_EMPLEADOS**/ 
/** LA SENTENCIA RETURN ENVÍA POR EL FLUJO DE DATOS EL CONTENIDO DE LA VARIABLE, O EL VALOR DE UNA EXPRESIÓN
    (RETURN A*5) Y FINALIZA LA EJECUCIÓN , ES LA ÚLTIMA SENTENCIA QUE SE EJECUTA
**/

DELIMITER $$
USE EMPRESA$$

DROP FUNCTION IF EXISTS Num_empleados_dep $$

CREATE FUNCTION Num_empleados_dep (clave_departamento integer unsigned)
RETURNS INT
READS SQL DATA
BEGIN
   DECLARE CANTIDAD_EMPLEADOS INTEGER;

   SELECT   COUNT(*) INTO CANTIDAD_EMPLEADOS
       FROM EMPLEADOS
       WHERE DEPARTAMENTO=CLAVE_DEPARTAMENTO;   
    
   RETURN CANTIDAD_EMPLEADOS;

END$$

/* DE OTRA FORMA.....

RETURN (
          SELECT   COUNT(*) 
            FROM EMPLEADOS
            WHERE DEPARTAMENTO=CLAVE_DEPARTAMENTO
            
        );
***************************/		


 /** AHORA EJECUTAMOS ESTE SCRIPT DE CREACIÓN DE UN NUEVO OBJETO, OBJETO DE TIPO FUNCTION*/
/*PARTE IZQUIERDA DE LA PANTALLA SOBRE LA BASE DE DATOS, REFRESCA Y DESPLIEGA ROUTINES, !YA TIENES LA FUNCIÓN IMPLEMENTADA!**/

/** AHORA ABRE SCRIPT 2_PROBAR FUCIÓN NUM_EMPLEADOS_DEP**/