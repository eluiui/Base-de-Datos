/*VAMOS A CREAR UNA NUEVA FUNCIÓN PARA NUESTRA BASE DE DATOS
  EMPRESA*/

/** LA FUNCIÓN VERIFICA SI UN DETERMINADO EMPLEADO, CUYA CLAVE RECIBE ES DIRECTOR DE DEPARTAMENTO O NO.
    SI LO ES, RETORNA CIERTO, EN CASO CONTRARIO, NO LO ES Y RETORNA FALSO**/

/** LA FUNCIÓN SE LLAMARÁ SI_DIRECTOR
    NECESITA  RECIBIR UN DATO: LA CLAVE DEL EMPLEADO, POR TANTO, DECLARAREMOS UN PARÁMETRO EN LA CABECERA,
    DEL TIPO DE DATO QUE YA TIENE EN MI BASE DE DATOS LA CLAVE DE EMPLEADO DE LA TABLA EMPLEADOS.**/
/*VALOR DE RETORNO BOOLEAN (CIERTO/FALSO*)*/


/** CUERPO DE LA FUNCIÓN: OPERACIONES ENTRE BEGIN.. END, DONDE DISEÑO LA TAREA QUE REALIZARÁ LA FUNCIÓN
    ¿QUÉ SIGNIFICA SER DIRECTOR EN NUESTRA BASE DATOS?
     ESTAR REFERENCIADO EN LA COLUMNA DIRECTOR DE LA TABLA DEPARTAMENTOS.
     SABIENDO QUE COLUMNA DIRECTOR TIENE  IMPUESTAS LA  RESTRICCIÓN DE UNICIDAD Y DE OBLIGATORIEDAD
*/
/** PUES YA ESTÁ!! FÁCIL, VAMOS A ELLO**/


DELIMITER $$
USE EMPRESA$$

DROP FUNCTION IF EXISTS SI_DIRECTOR$$

CREATE FUNCTION SI_DIRECTOR(CLAVE_EMPLEADO INTEGER UNSIGNED)
RETURNS BOOLEAN
READS SQL DATA
BEGIN
    
  IF CLAVE_EMPLEADO IN (
                        SELECT DIRECTOR
                          FROM DEPARTAMENTOS
                       )
             THEN RETURN TRUE;
             ELSE RETURN FALSE;
  END IF;
        


END$$
/** FIJAROS: PRIMERO SE EJECUTA LA CONSULTA ENTRE PARÉNTESIS: OBTENGO LISTA DE CLAVES DE DIRECTORES
    Y DESPUÉ IF VERIFICA LA EXPRESIÓN: SI VALOR EN CLAVE_EMPLEADO ESTA EN LA LISTA
    ENTONCES SE EJECUTA SENTENCIA EN THEN
    SI EXPRESIÓN ES FALSA SE EJECUTA SENTENCIA EN ELSE
    EN CUALQUIERA DE LOS DOS CASOS ( IF CIERTO/ IF FALSO) FIN EJECUCIÓN DE LA FUNCIÓN PORQUE OPERACIÓN ES RETURN
***/


/** AHORA EJECUTAMOS ESTE SCRIPT DE CREACIÓN DE UN NUEVO OBJETO, OBJETO DE TIPO FUNCTION*/
/*PARTE IZQUIERDA PANTALLA SOBRE LA BASE DE DATOS REFRESCA Y DESPLIEGA ROUTINES,
    !YA TIENES LA FUNCIÓN IMPLEMENTADA!**/

/** AHORA ABRE SCRIPT 6_PROBAR FUCIÓN SI_DIRECTOR**/