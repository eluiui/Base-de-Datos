  /**************
  **************************   EJERCICIO 3. ENUNCIADO: 
                                                PARTIENDO DE ESTE SCRIPT, AÑADE  Y MODIFICA 
                                                LAS DEFINICIONES NECESARIAS PARA OBTENER
                                               EL SCRIPT DE CREACIÓN DE LA BASE DE DATOS BBDD_EMPRESA_VER2, 
                                               CUYO MODELO CONCEPTUAL SE SUMINSTRA 
                                             
                                             ******************************** *************************************************/
                                                                                                                                                                                    
                                                                                                                                      
                                            
                                       
                                          
  
  
  
DROP DATABASE IF EXISTS BD_EMPRESA_V2;
CREATE DATABASE IF NOT EXISTS BD_EMPRESA_V2;
USE BD_EMPRESA_V2;

/*****************  DEFINICIÓN TABLA DEPARTAMENTOS*****************************/

DROP TABLE IF EXISTS T_DEPARTAMENTOS;
 CREATE TABLE IF NOT EXISTS  T_DEPARTAMENTOS
 (
    ID_DEPARTAMENTO SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(30) NOT NULL,
    DIRECTOR CHAR(9) not null	,
        foreign key(director) references EMPLEADOS (dni)
                           on delete restrict
                           on update cascade,
    unique index fk_DIRECTOR (director),  
             FECHA_DIRECTOR  DATE NOT NULL,
			 PRIMA    INT NOT NULL,
     UNIQUE INDEX AK_nombre(nombre),
      /** SOLO PUEDE HABER UNA COLUMNA DEFINIDA AUTO_INCRMENT*/
      /**LA COLUMNA AUTO_INCREMENT TIENE QUE SER O FORMAR PARTE  DE LA PRIMARY KEY**/
   PRIMARY KEY(ID_DEPARTAMENTO)
   
        
   
 )
     ENGINE = INNODB
     MAX_ROWS 15; /**  AÑADE EN EL SCRIPT UN COMENTARIO AQUÍ  PARA EXPLICAR ESTA DEFINICIÓN***/
     

/***** DEFINICIÓN DE LA TABLA EMPLEADOS    **********************************/

DROP TABLE IF EXISTS T_EMPLEADOS;
CREATE TABLE IF NOT EXISTS T_EMPLEADOS
(
  /*PARTE OBLIGATORIA DE LA SENTENCIA CREATA TABLE  LISTA DE DEFINCIONES SEPARADAS COMA*/
   DNI CHAR(9) NOT NULL ,
   NOMBRE_APE   VARCHAR(50) NOT NULL,
   FECHA_NAC   DATE  NOT NULL,
   DIRECCION   VARCHAR(100)  NULL,
   NSS  CHAR(10)  NOT NULL ,
   SALARIO  FLOAT NOT NULL,
   FECHA_ALTA  DATE NOT NULL,
   DEPARTAMENTO SMALLINT UNSIGNED NOT NULL,
      FOREIGN KEY (DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO)
            ON DELETE RESTRICT
            ON UPDATE CASCADE,
      INDEX FK_DEPARTAMENTO_PERT(DEPARTAMENTO),
   SUPERVISOR CHAR(9) NOT NULL,
      FOREIGN KEY (SUPERVISOR) REFERENCES EMPLEADOS(DNI)
            ON DELETE SET NULL
            ON UPDATE CASCADE,
      INDEX FK_SUPRVISOR(SUPERVISOR),
	  FECHA_SUPERVISON  DATE NOT NULL,
      DIA_SEMANA   DATE NOT NULL,
       UNIQUE INDEX AK_nss(nss),
   PRIMARY KEY (DNI)
   
  
)
   ENGINE INNODB;

     
     

  
  
  /*** DEFINICIÓN DE LA TABLA FAMILIARES**/
  
  
  DROP TABLE IF EXISTS T_FAMILIARES;
  CREATE TABLE IF NOT EXISTS T_FAMILIARES
  (
     DNI CHAR(9) NOT NULL,
     NOMBRE_APE VARCHAR(45) NOT NULL,
     FECHA_NAC DATE NOT NULL,
     EMPLEADO CHAR(9) NOT NULL,
	FOREIGN KEY (EMPLEADO) REFERENCES EMPLEADOS(DNI)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
	INDEX FK_EMPLEADO(EMPLEADO),
    PARENTESCO BOOLEAN NOT NULL,
	PRIMARY KEY (DNI)
    )
    ENGINE INNODB;
    
   
      /*** RECORDAD QUE NOS HAN INFORMADO DE QUE  LOS VALORES POSIBLES DE   PARENTESCO 
            SON HIJA/HIJO, NIETO/NIETA, MADRE/PADRE    ****************/  
            
         
      
      
      
      
    
  
  
 /**** DEFINICIÓN DE LA TABLA PROYECTOS****************/
      
  DROP TABLE IF EXISTS T_PROYECTOS;
    CREATE  TABLE  IF NOT EXISTS T_PROYECTOS
  (
     ID_PROYECTO INT UNSIGNED AUTO_INCREMENT ,
     NOMBRE VARCHAR(45) NOT NULL,
     FECHA_INICIO DATE NOT NULL,
     FECHA_PREV_FIN DATE NOT NULL  DEFAULT '0000-00-00',
     PRESUPUESTO FLOAT NOT NULL DEFAULT 100000.0,
     DEPARTAMENTO SMALLINT UNSIGNED NOT NULL,
      FOREIGN KEY (DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO)
            ON DELETE RESTRICT
            ON UPDATE CASCADE,
      INDEX FK_DEPARTAMENTO(DEPARTAMENTO),
       UNIQUE INDEX AK_nombre(nombre),
    PRIMARY KEY (ID_PROYECTO)
  
  ) 
  ENGINE INNODB
  MIN_ROWS 100;
  
  /** TABLA PARA  REGISTRAR LA  RELACIÓN  DE TIPO (N:M) EMPLEADO TRABAJA EN PROYECTOS
  CADA TUPLA DE ESTA TABLA CONTIENE UN REGISTRO DE ORDEN DE TRABAJO
  DE UN EMPLEADO EN UN PROYECTO***/         
        /** EL PRECIO DE LA HORA DE TRABAJO DE UN EMPLEADO EN UN DETERMINADO PROYECTO  TIENE UN VALOR POR DEFECTO DE 150.0 EUROS
             Y EL NÚMERO DE HORAS SEMANALES DE TRABAJO  EN UN PROYECTO SON POR DEFECTO 25 
            *****************/

  /****** DEFINICIÓN TABLA EMPLEADOS_PROYECTOS******/            
  DROP TABLE IF EXISTS EMPLEADOS_PROYECTOS;
  
  CREATE TABLE IF NOT EXISTS EMPLEADOS_PROYECTOS
  (
  	  EMPLEADO CHAR(9) NOT NULL,
      FOREIGN KEY (EMPLEADO) REFERENCES EMPLEADOS(DNI)
            ON DELETE RESTRICT
            ON UPDATE CASCADE,
      INDEX FK_EMPLEADO(EMPLEADO),
	  PROYECTO INT NOT NULL,
      FOREIGN KEY (PROYECTO) REFERENCES PROYECTOS(ID_PROYECTO)
            ON DELETE RESTRICT
            ON UPDATE CASCADE,
	  HORAS      INT NOT NULL,
      FECHA    DATE   NOT NULL,
      PRECIO     FLOAT NOT NULL,
      INDEX FK_PROYECTO(PROYECTO),
	  PRIMARY KEY (EMPLEADO,PROYECTO)
    ) ENGINE INNODB;

  /****** DEFINICIÓN TABLA DEPARTAMENTOS_SEDES******/    
  DROP TABLE IF EXISTS DEPARTAMENTOS_SEDES;
  
  CREATE TABLE IF NOT EXISTS DEPARTAMENTOS_SEDES
  (
  	  DEPARTAMENTO SMALLINT UNSIGNED NOT NULL,
      FOREIGN KEY (DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
      INDEX FK_DEPARTAMENTO_SEDE(DEPARTAMENTO),
	  SEDE SMALLINT UNSIGNED NOT NULL,
      FOREIGN KEY (SEDE) REFERENCES SEDES (ID_SEDE)
            ON DELETE RESTRICT
            ON UPDATE CASCADE,
	  HORAS      INT NOT NULL,
      FECHA    DATE   NOT NULL,
      PRECIO     FLOAT NOT NULL,
      INDEX FK_SEDE_DEPARTAMENTO(SEDE),
	  PRIMARY KEY (DEPARTAMENTO,SEDE)
    ) ENGINE INNODB;
  
      
  /****** DEFINICIÓN TABLA SEDES******/
  DROP TABLE IF EXISTS T_SEDES;
  CREATE TABLE IF NOT EXISTS T_SEDES
  (
    ID_SEDE  SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    LOCALIDAD VARCHAR(45) NOT NULL,
    PROVINCIA ENUM('MADRID','CORUÑA','LOGROÑO','SANTIAGO','GRANADA','VALENCIA') NOT NULL,
    SUPERFICIE FLOAT NOT NULL DEFAULT 120.0,
    DIRECCCION VARCHAR (120)  NULL,
    PRIMARY KEY (ID_SEDE),
    UNIQUE INDEX AK_LOCALIDAD_PROV (PROVINCIA, LOCALIDAD)
  
  
  
  ) ENGINE INNODB;
 
   /****** DEFINICIÓN TABLA TELEFONOS******/
  DROP TABLE IF EXISTS SEDE_TELEFONOS;
  
  CREATE TABLE IF NOT EXISTS TELEFONOS
  (
   SEDE       SMALLINT NOT NULL, 
			FOREIGN KEY (SEDE) REFERENCES SEDES (ID_SEDE)
            ON DELETE cascade
            ON UPDATE CASCADE,
  INDEX FK_SEDE_TELEFONO(SEDE),
  telefono      INT    not null,
              PRIMARY KEY(telefono,sede)
    ) ENGINE INNODB;
  
  /*** EXPLICA EN UN COMENTARIO LA LÍNEA DONDE SE DEFINE EL ÍNDICE AK_LOCALIDAD_PROV ***/
  
  
  /*** AÑADIR AL  MODELO CONCEPTUAL SUMINTRADO  Y POR TANTO REGISTRAR TAMBIÉN  EN LA IMPLEMENTACIÓN LOS DOS PUNTOS SIGUIENTES:  ****/
  
  /*******  1º -ES NECESARIO   REGISTRAR  LA SEDE EN LA QUE TRABAJA CADA DIRECTOR DE DEPARTAMENTO 
              UN DIRECTOR RESIDE_TRABAJA EN UNA DETERMINADA SEDE, EN UNA MISMA SEDE PODRÁN HABER VARIOS DIRECTORES
              TRABAJANDO****************************/
              
  /*****  2º ES NECESARIO, POR ÚLTIMO,INCLUIR EN NUESTRA BASE DE DATOS LA NECESIDAD DE REGISTRAR QUE CADA PROYECTO  TIENE UN  EMPLEADO
             QUE CONSTA COMO TUTOR DE PROYECTO, REGISTRAMOS LA FECHA DESDE QUE ES TUTOR DE PROYECTO Y UNA CANTIDAD DE HORAS ASIGNADAS 
             A ESA LABOR . UN EMPLEADO  PODRÁ SER REGISTRADO COMO TUTOR DE PROYECTO DE MÁS DE UNO AL MISMO TIEMPO.
             ATENCIÓN: CUANDO SE ELIMINA A UN EMPLEADO DE LA BASE DE DATOS Y ESTE CONSTA COMO TUTOR DE UNO/VARIOS PROYECTOS, ESTOS PROYECTOS
             QUEDARÁN TEMPORALMENTE SIN UN  TUTOR ASIGNADO****************/
  
  
  
  
 