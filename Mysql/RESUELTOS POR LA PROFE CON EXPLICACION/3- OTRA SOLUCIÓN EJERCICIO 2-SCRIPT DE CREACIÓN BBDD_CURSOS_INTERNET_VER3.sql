/**********************************************************************************************************************************************
    OTRA SOLUCIÓN :      SCRIPT PARA OBTENER LA BASE DE DATOS 
                              BBDD_CURSOS_INTERNET_VER 3 
*************************************************************************************************************************************************
 SCRIPT DE CREACIÓN DE LA BASE DE DATOS
                                  BBDD_CURSOS_INTERNET_VER 3
                                        ESPECIALIZACIÓN DE LA ENTIDAD PROFESOR                                              
     **************************** *****************/
 /****  LA RELACIÓN TENER DIRECTOR ESTÁ ALMACENADA  ESTA VEZ EN TABLA DIRECTORES
         PODRÍA ESTAR ALMACENADA EN LA TABLA DEPARTAMENTOS
         *****************************************************/
                                  
  DROP DATABASE IF EXISTS BBDD_CURSOS_INTERNET_V3;
  
  CREATE DATABASE IF NOT EXISTS  BBDD_CURSOS_INTERNET_V3;
  
  USE BBDD_CURSOS_INTERNET_V3;
  
  /*****************************  TABLA AULAS PARA GUARDAR ENTIDAD AULA  
                                              Y 
                                              TABLA TELEFONOS_AULAS PARA SU ATRIBUTO 
                                                                       MULTIVALUADO        ****************************/
  DROP TABLE IF  EXISTS AULAS;
  CREATE TABLE IF  NOT EXISTS AULAS
  (
      ID_AULA INT  UNSIGNED NOT NULL  AUTO_INCREMENT,
      NOMBRE   ENUM ('SÓCRATES','ARISTÓTELES', 'PITÁGORAS','SÓFOCLES', 'PLATÓN') NOT NULL,
      LOCALIDAD  VARCHAR(30) NOT NULL,
      DIRECCION VARCHAR (45) NULL,
      PRIMARY KEY (ID_AULA),
      UNIQUE INDEX U_NOM_LOC (NOMBRE,LOCALIDAD)
       
  
  ) ENGINE INNODB;
  /** ESTA TABLA GUARDA LA ENTIDAD AULA***/
  /**    ESTA ENTIDAD SE COMPLETA CON ESTA SEGUNDA TABLA PARA 
             PODER REGISTRAR POR CADA TUPLA DE AULA VARIOS TELÉFONOS.
             (ESTO CAMBIARÁ CUANDO USEMOS BASES DE DATOS OBJETO_RELACIONALES
             QUE NOS PERMITIRAN DEFINIR TIPOS DE DATOS COMPLEJOS,
             DE MODO QUE ,PODREMOS INCORPORAR  DENTRO DEL TIPO DEL  OBJETO QUE 
             DEFINE A CADA TUPLA UN ARRAY LIST DE DATOS TELEFONO
             **************/
  
  
  DROP TABLE IF EXISTS TELEFONOS_AULAS;
  CREATE TABLE IF NOT EXISTS TELEFONOS_AULAS
  ( 
       AULA  INT  UNSIGNED  NOT NULL,
       TELEFONO VARCHAR(10) NOT NULL,
       PRIMARY KEY (AULA, TELEFONO),
       FOREIGN KEY (AULA) REFERENCES AULAS(ID_AULA)
              ON DELETE CASCADE  /** SIEMPRE**/
              ON UPDATE CASCADE,
       INDEX FK_AULA_TLF (AULA)                       
  
  )ENGINE INNODB;
  
 
 
 
 /************  TABLA ALUMNOS    PARA GUARDAR ENTIDAD ALUMNO
                       Y LA RELACIÓN ALUMNO TIENE UN AULA ASIGNADA
                       MIENTRAS UN AULA ESTÉ REFERENCIADA POR UN ALUMNO/A COMO
                       SU AULA ASIGNADA,
                        NO SE PODRÁ  SER ELIMINADA DE LA BASE DE DATOS
                                                              ********************/
                                                              
  DROP TABLE IF EXISTS  ALUMNOS;
  CREATE TABLE IF NOT EXISTS ALUMNOS
  (
      DNI CHAR(9) NOT NULL,
      NOMBRE VARCHAR (50) NOT NULL,
      DIRECCION VARCHAR(60) NOT NULL,
      FECHA_NAC  DATE NOT NULL,
      TELEFONO  VARCHAR (10) NULL,
      E_MAIL     VARCHAR(45) NOT NULL,
      FOTO       BLOB NULL,
      DNI_DIG   BLOB NULL,
      AULA_ASIGNADA INT  UNSIGNED NOT NULL,
      PRIMARY KEY (DNI),
      /** RESTRICCIÓN DE UNICIDAD PARA COLUMNA E_MAIL, NOS SERVIRÁ DE CLAVE ALTERNATIVA**/
      UNIQUE INDEX AK_E_MAIL_ALUMNO (E_MAIL),
      FOREIGN KEY (AULA_ASIGNADA) REFERENCES AULAS(ID_AULA)
            ON DELETE RESTRICT 
            ON UPDATE CASCADE,
      INDEX FK_AULA_ASIGNADA (AULA_ASIGNADA)      
       
  
  ) ENGINE INNODB;
  
  
   /******************************* TABLA   PROFESORES PARA GUARDAR ENTIDAD PROFESOR
                                              QUE EN NUESTRO MODELO HEMOS ESPECIALIZADO EN 
                                              4 SUBCLASES   O SUBENTIDADES
                                  Y 
       1) LA RELACIÓN PROFESOR PUEDE TENER UN  PROFESOR_SUPERVISOR
       2) LA RELACIÓN PROFESOR PERTENENECE A UN DEPARTAMENTO***********/
  
          /********* TABLA PROFESORES ES UNA SUPERCLASE**/
  DROP TABLE IF EXISTS PROFESORES;
  CREATE TABLE IF NOT EXISTS PROFESORES
  (
      DNI  CHAR(9) NOT NULL,
      NOMBRE VARCHAR(50) NOT NULL,
      FECHA_NAC DATE NOT NULL,
      E_MAIL VARCHAR (45) NOT NULL,
      FECHA_ALTA  DATE NOT NULL,
      SALARIO  FLOAT NOT NULL DEFAULT 1500.0,
      SUPERVISOR CHAR(9) NULL,   /*PROFESOR PARTICIPA EN RELACIÓN TENER SUPERVISOR OPTATIVA (0,1)**/
      DEPARTAMENTO INT UNSIGNED NOT NULL,/*PROFESOR PARTICIPA EN RELACIÓN PERTENECER A DEPARTAMENTO OBLIGATORIA (1,1)**/
      PRIMARY KEY (DNI),
      UNIQUE INDEX AK_E_MAIL_PROF (E_MAIL),
      /*RESTRICCIÓN DE FOREIGN KEY PARA COLUMNA SUPERVISOR**/ 
       INDEX FK_PROFESOR_SUPERVISOR(SUPERVISOR),
       /*RESTRICCIÓN DE FOREIGN KEY PARA COLUMNA DEPARTAMENTO**/ 
        INDEX FK_DEPARTAMENTO_PERTENECE (DEPARTAMENTO)      
       
  
  ) ENGINE INNODB;
  
  
  /*************** CUATRO TABLAS UNA PARA CADA SUBCLASE:
                        CADA TABLA ES UNA ESPECIALIZACIÓN DE PROFESOR, ES DECIR,
                        UNA LISTA DE DNI's  DE PROFESORES  **/
                        
   /*SUBCLASE SUPERVISOR-----> TABLA SUPERVISORES**/
   
   
  DROP TABLE IF EXISTS SUPERVISORES;
  CREATE TABLE IF NOT EXISTS SUPERVISORES
  (
      DNI CHAR(9) NOT NULL,
      PRIMARY KEY (DNI),  
      FOREIGN KEY (DNI) REFERENCES PROFESORES(DNI)
           ON DELETE CASCADE /*SIEMPRE, PORQUE UNA SUBCLASE DEPENDE EN EXISTENCIA DE LA SUPERCLASE**/
           ON UPDATE CASCADE
    
  
  )  ENGINE INNODB; /**MOTOR POR DEFECTO**/
  
 /** DESDE ESTE PUNTO DEL SCRIPT YA PODEMOS COMPILAR ESTA DEFINICIÓN 
      QUE FALTABA PARA LA TABLA PROFESORES**/
      
  ALTER TABLE PROFESORES
     ADD FOREIGN KEY (SUPERVISOR) REFERENCES SUPERVISORES(DNI)
            ON DELETE SET NULL  /** FIJARSE**/
             ON UPDATE CASCADE;
             
   /** CUANDO SE ELIMINA DE LA BASE DE DATOS A UN PROFESOR QUE ES SUPERVISOR
        DE 1 O VARIOS PROFESORES, TODOS SUS SUPERVISADOS PASAN A NO TENER SUPERVISOR ASIGNADO
        Y EN CASCADA SE ELIMINA UNA TUPLA DE LA TABLA SUPERVISORES**/          
            
   /** SUBCLASE ADMINISTRADOR----> TABLAADMINISTRADORES**/
   
   DROP TABLE IF EXISTS ADMINISTRADORES;
  CREATE TABLE IF NOT EXISTS ADMINISTRADORES
  (
      DNI CHAR(9) NOT NULL,
      PRIMARY KEY (DNI),  
      FOREIGN KEY (DNI) REFERENCES PROFESORES(DNI)
           ON DELETE CASCADE
           ON UPDATE CASCADE,
      /*********************  AÑADIMOS TODAS  ESTAS  DEFINICIONES
                                    PARA REGISTRAR  LA RELACIÓN
                                    ADMINISTRADOR ADMINISTRA UN AULA **********/
      AULA INT  UNSIGNED NOT NULL,   /** ADMINISTRADOR PARTICIPA CON OBLIGATORIEDAD  (1,1)*/
      DIA_SEMANA  SET ('LUNES','MARTES','JUEVES') NOT NULL, /*FIJARSE TIPO DE DATO**/
      PRECIO_HORA  FLOAT NOT NULL DEFAULT 120.5,
      NUM_HORAS_SEM INTEGER NOT NULL DEFAULT 5,
            
      FOREIGN KEY (AULA) REFERENCES AULAS (ID_AULA)
             ON DELETE CASCADE  /**FIJARSE**/
             ON UPDATE CASCADE,
      INDEX FK_AULA_ADMINISTRADA (AULA)  
      /****************************************************************************/   
  
  
  )  ENGINE INNODB; /**MOTOR POR DEFECTO**/
   /*****************************  TABLA DEPARTAMENTOS PARA GUARDAR 
                           SÓLO  LA ENTIDAD DEPARTAMENTO                              
                               *******/ 
   DROP TABLE IF EXISTS DEPARTAMENTOS;
  CREATE TABLE IF NOT EXISTS DEPARTAMENTOS
  (
    ID_DEPARTAMENTO INT UNSIGNED NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR (20)  NOT NULL,
    E_MAIL     VARCHAR(45) NOT NULL,    
       
    PRIMARY KEY(ID_DEPARTAMENTO),
    UNIQUE INDEX AK_E_MAIL_DEP (E_MAIL)
       
  
  ) ENGINE INNODB;
  
  /** DESDE ESTE PUNTO  DEL SCRIPT YA PODEMOS HACER LA DEFINICIÓN QUE FALTABA
      EN LA TABLA PROFESORES**/
  ALTER TABLE PROFESORES
      ADD FOREIGN KEY(DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO)
           ON DELETE RESTRICT /** FIJARSE**/
           ON UPDATE CASCADE;
  
  /** MIENTRAS UN DEPARTAMENTO ESTÉ REFERENCIADO POR UN PROFESOR, NO SE PODRÁ
       ELIMINAR DE LA BASE DE DATOS, SÓLO PODEMOS BORRAR A UN DEPARTAMENTO
       CUANDO NO HAYA NINGÚN PROFESOR "DICIENDO" QUE PERTENECE A ÉL**/
  
  
  
  /*** SUBCLASE  DIRECTOR----> TABLA DIRECTORES
          ESTA TABLA GUARDA LA SUBCLASE  DIRECTOR
          Y LA RELACIÓN DIRECTOR DIRIGE  DEPARTAMENTO**/
DROP TABLE IF EXISTS DIRECTORES;
  CREATE TABLE IF NOT EXISTS DIRECTORES
  (
      DNI CHAR(9) NOT NULL,
      PRIMARY KEY (DNI),  
      FOREIGN KEY (DNI) REFERENCES PROFESORES(DNI)
           ON DELETE CASCADE /*SIEMPRE, PORQUE UNA SUBCLASE DEPENDE EN EXISTENCIA DE LA SUPERCLASE**/
           ON UPDATE CASCADE,
       /****LAS SIGUIENTES DEFINICIONES PARA ALMACENAR LA RELACIÓN
          DIRECTOR DIRIGE UN DEPARTAMENTO*****/
    DEPARTAMENTO  INT UNSIGNED NOT NULL ,/*PORQUE DIRECTOR PARTICIPA OBLIGATORIAMENTE*/
    PRIMA    FLOAT NOT NULL DEFAULT 1200.0,
    FECHA    DATE NOT NULL,
    FOREIGN KEY (DEPARTAMENTO) REFERENCES DEPARTAMENTOS(ID_DEPARTAMENTO)
            ON DELETE CASCADE /*** AQUÍ FIJARSE**/
            ON UPDATE CASCADE,            
     UNIQUE INDEX FK_DEPARTAMENTO(DEPARTAMENTO)    /** RESTRICCIÓN DE UNICIDAD E ÍNDICE PARA  LA FK**/   
     /**** ESTA ÚLTIMA DEFINICIÓN IMPRESCINDIBLE HACERLA PARA PODER
            REGISTRAR LA PARTICIPACIÓN  MÁXIMA DE DEPARTAMENTO = 1**/     
   /** AQUÍ FIJARSE: AL ELIMNAR UN DEPARTAMENTO DE LA BASE DE DATOS
        (YA NO HAY  REGISTRADO NINGÚN PROFESOR QUE ESTÉ ASIGNADO A ÉL)
        SE ELIMINA SU DIRECTOR DE LA LISTA DE DIRECTORES**/
   
  
  )  ENGINE INNODB; /**MOTOR POR DEFECTO**/  
  
  /** SUBCLASE EVALUADOR----> TABLA   EVALUADORES**/
  
  DROP TABLE IF EXISTS EVALUADORES;
  CREATE TABLE IF NOT EXISTS EVALUADORES
  (
      DNI CHAR(9) NOT NULL,
      PRIMARY KEY (DNI),  
      FOREIGN KEY (DNI) REFERENCES PROFESORES(DNI)
           ON DELETE CASCADE /*SIEMPRE, PORQUE UNA SUBCLASE DEPENDE EN EXISTENCIA DE LA SUPERCLASE**/
           ON UPDATE CASCADE        
  
  
  )  ENGINE INNODB; /**MOTOR POR DEFECTO**/
 
  
  
 
  
  
  
  
  /*******************************TABLA  CURSOS   PARA GUARDAR ENTIDAD CURSO
                                  Y  
                                             RELACIÓN CURSO TIENE UN PROFESOR QUE ES SU EVALUADOR
                                             RELACIÓN CURSO TIENE UN ALUMNO QUE ES SU DELEGADO
                                  
                                  ************************************************/
  DROP TABLE IF EXISTS CURSOS;
  CREATE TABLE IF NOT EXISTS CURSOS
  (
    ID_CURSO INT UNSIGNED  AUTO_INCREMENT NOT NULL,
    NOMBRE  VARCHAR(30) NOT NULL,
    DURACION   INT NOT NULL DEFAULT 300 ,
    PRECIO      FLOAT NOT NULL DEFAULT 650.0,
    URL_CURSO VARCHAR(100) NOT NULL,
    LIBRO  VARCHAR(60)  NULL,
    PRIMARY KEY (ID_CURSO),
    UNIQUE INDEX AK_NOMBRE_CURSO (NOMBRE),
    UNIQUE INDEX AK_URL_CURSO(URL_CURSO),
     /*********** DEFINICIONES PARA REGISTRAR
                      RELACIÓN TENER PROFESOR EVALUADOR  ******************************/
    EVALUADOR  CHAR(9) NOT NULL, /** CURSO PARTICIPA (1,1)**/
    FECHA_EVALUACION DATE NULL,
    HORA_EVALUACION  TIME NULL,
     /** LA RELACIÓN ES OBLIGATORIA, PERO ESTA VEZ LOS ATRIBUTOS SON OPTATIVOS**/
    FOREIGN KEY (EVALUADOR) REFERENCES EVALUADORES(DNI)
         ON DELETE RESTRICT /** FIJARSE**/
         ON UPDATE CASCADE,
    INDEX FK_PROF_EVALUADOR(EVALUADOR) ,
    /**ESTA RELACIÓN ES (1:N),INDICE PARA LA FK EVALUADOR DE TIPO INDEX**/
    /** FIJARSE: MIENTRAS UN PROFESOR ESTÉ REFERENCIADO COMO EVALUADOR NO SE PODRÁ ELIMINAR**/
    
    /*************  DEFINICIONES PARA REGISTRAR RELACIÓN TENER  ALUMNO DELEGADO****/
     DELEGADO CHAR(9)  NOT NULL,
    FOREIGN KEY (DELEGADO) REFERENCES ALUMNOS(DNI)
          ON DELETE RESTRICT
          ON UPDATE CASCADE,
    UNIQUE INDEX FK_ALUMNO_DELEGADO(DELEGADO) 
    /***IMPORTANTE ESTA REALCIÓN ES (1:1), IMPRESCINDIBLE ESTE UNIQUE INDEX PARA
         LA FK DELEGADO*****/
   
  
  )ENGINE INNODB;
  
  
    /**************************  TABLA PARA RELACIÓN (N:M) PROFESOR IMPARTE CURSO
    EN ESTA TABLA CADA TUPLA CONTIENE UN REGISTRO DE IMPARTIR
    UNA OCURRENCIA DE LA RELACIÓN IMPARTIR (  UN REGISTRO DE TRABAJO)***/
  
  DROP TABLE IF EXISTS PROFESORES_CURSOS;
  
  CREATE TABLE IF NOT EXISTS PROFESORES_CURSOS
  (
        PROFESOR  CHAR(9) NOT NULL,
        CURSO   INT UNSIGNED  NOT NULL,
        NUM_HORAS INT NOT NULL DEFAULT 7,
        PRECIO_HORA FLOAT NOT NULL  DEFAULT 120.0,
        
        PRIMARY KEY(PROFESOR, CURSO),
        FOREIGN KEY(PROFESOR) REFERENCES PROFESORES(DNI)
                             ON DELETE CASCADE
                             ON UPDATE CASCADE,
         INDEX FK_PROFEOSR_IMPARTE (PROFESOR),
         FOREIGN KEY (CURSO) REFERENCES CURSOS(ID_CURSO)
                             ON DELETE CASCADE
                             ON UPDATE CASCADE,
          INDEX FK_CURSO_IMPARTIDO (CURSO)                   
  
    
  ) ENGINE INNODB;
  
  
   /**************************  TABLA PARA RELACIÓN (N:M) ALUMNO MATRICULADO EN  CURSO
   EN ESTA TABLA CADA TUPLA CONTIENE UN REGISTRO DE ESTAR MATRICULADO,
    UNA OCURRENCIA DE LA RELACIÓN MATRICULARSE (  UN REGISTRO DE MATRÍCULA) ***/
  DROP TABLE IF EXISTS ALUMNOS_CURSOS;
  
  CREATE TABLE IF NOT EXISTS ALUMNOS_CURSOS
  (
     ALUMNO CHAR(9) NOT NULL,
     CURSO   INT UNSIGNED  NOT NULL,
     FECHA_MATRICULA DATE NOT NULL,
     NOTA   ENUM ('APTO', 'NO APTO', 'SIN EVALUAR')  NOT NULL  DEFAULT 'SIN EVALUAR',
     PRIMARY KEY (ALUMNO, CURSO),
     FOREIGN KEY (ALUMNO) REFERENCES ALUMNOS(DNI)
                          ON DELETE CASCADE
                          ON UPDATE CASCADE,
     INDEX FK_ALUMNO_MATRICULADO(ALUMNO),                     
     FOREIGN KEY (CURSO) REFERENCES CURSOS(ID_CURSO)
                             ON DELETE RESTRICT
                             ON UPDATE CASCADE,
     INDEX FK_CURSO_IMPARTIDO (CURSO) 
  
  
  ) ENGINE INNODB;
 
 
 /*** CON ESTA SOLUCIÓN 
       PODREMOS DAR DE BAJA EN LA BASE DE DATOS A UN PROFESSOR
       AUNQUE ESTÉ REGISTRADO EN ESE MOMENTO COMO DIRECTOR DE UN DEPARTAMENTO
       Y ESE ERA UN REQUISITO IMPUESTO: UN DEPARTAMENTO NO SE PUEDE QUEDAR 
       SIN DIRECTOR EN NINGÚN INSTANTE
       SOLUCIÓN:
       
           DEFINIR UN DISPARADOR PARA LA TABLA DIRECTORES
           QUE IMPIDA EL BORRADO  DIRECTO DE CUALQUIER TUPLA EN ELLA.
           ES DECIR, EN ESTA TABLA DIRECTORES LOS BORRADOS E INSERCCIONES DE TUPLAS
           SE HACEN   CON UNA RUTINA NOMBRAR_DIRECTOR_DE_DEPRTAMENTO
 *******************************/
 